# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build

on:
  push:
    branches: ["main"]

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up docker environment
        run: docker compose -f testing.docker-compose.yaml up -d

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Setup node 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Clean docker environment
        run: docker compose -f testing.docker-compose.yaml down --rmi all -v --remove-orphans

  versioning:
    needs: build
    runs-on:
      ubuntu-latest
      # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    outputs:
      version: ${{ steps.latest_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - name: Git Identity
        run: |
          git checkout main
          git fetch --all --tags
          git config --global user.email "antoniojosedonishung@gmail.com"
          git config --global user.name "Antonio Donis"
        
      - name: Changelog
        run: 'npx standard-version --message "[ci skip] chore(release): %s"'

      - name: Push changes
        run: git push --follow-tags --force origin main

      - id: latest_version
        name: Latest version
        run: python version.py >> $GITHUB_OUTPUT

  release-github:
    needs:
      - versioning
    runs-on: ubuntu-latest
    steps:
      - name: Install UPX
        run: sudo apt-get install upx

      - uses: actions/checkout@v3

      - name: Linux binary
        run: go build -v -o bin/${{ github.repository }}
        env:
          GOOS: linux
          GOARCH: amd64

      - name: Windows binary
        run: go build -v -o bin/${{ github.repository }}.exe
        env:
          GOOS: windows
          GOARCH: amd64

      - name: UPX binaries
        run: upx bin/${{ github.repository }}*

      - name: GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            bin/${{ github.repository }}
            bin/${{ github.repository }}.exe
          tag_name: v${{needs.versioning.outputs.version}}

  release-docker:
    needs:
      - versioning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Docker image
        run: echo "v${{needs.versioning.outputs.version}}"

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest,ghcr.io/${{ github.repository }}:${{needs.versioning.outputs.version}}
          labels: ${{ steps.meta.outputs.labels }}
